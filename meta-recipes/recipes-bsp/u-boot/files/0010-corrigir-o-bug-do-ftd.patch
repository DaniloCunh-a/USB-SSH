From edec8b1c82e3ccf5fadaf17347a411084e1cc9a2 Mon Sep 17 00:00:00 2001
From: Mateus Pantoja <mateuspantoja9@gmail.com>
Date: Wed, 15 Feb 2023 16:48:57 -0500
Subject: [PATCH 10/17] corrigir o bug do ftd

---
 .../stm32mp157f-dn-som/stm32mp157f-dn-som.c   | 42 +++++++++++++++++++
 1 file changed, 42 insertions(+)

diff --git a/board/dn-lse/stm32mp157f-dn-som/stm32mp157f-dn-som.c b/board/dn-lse/stm32mp157f-dn-som/stm32mp157f-dn-som.c
index c6c8055859..5fcaa33eb2 100644
--- a/board/dn-lse/stm32mp157f-dn-som/stm32mp157f-dn-som.c
+++ b/board/dn-lse/stm32mp157f-dn-som/stm32mp157f-dn-som.c
@@ -424,6 +424,48 @@ int board_init(void)
 
 int board_late_init(void)
 {
+	const void *fdt_compat;
+	int fdt_compat_len;
+	int ret;
+	u32 otp;
+	struct udevice *dev;
+	char buf[10];
+	char dtb_name[256];
+	int buf_len;
+
+	if (IS_ENABLED(CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG)) {
+		fdt_compat = fdt_getprop(gd->fdt_blob, 0, "compatible",
+					 &fdt_compat_len);
+		if (fdt_compat && fdt_compat_len) {
+			if (strncmp(fdt_compat, "lse,", 4) != 0) {
+				env_set("board_name", fdt_compat);
+			} else {
+				env_set("board_name", fdt_compat + 3);
+
+				buf_len = sizeof(dtb_name);
+				strncpy(dtb_name, fdt_compat + 4, buf_len);
+				buf_len -= strlen(fdt_compat + 4);
+				strncat(dtb_name, ".dtb", buf_len);
+				env_set("fdtfile", dtb_name);
+			}
+		}
+		ret = uclass_get_device_by_driver(UCLASS_MISC,
+						  DM_DRIVER_GET(stm32mp_bdsec),
+						  &dev);
+
+		if (!ret)
+			ret = misc_read(dev, STM32_BSEC_SHADOW(BSEC_OTP_BOARD),
+					&otp, sizeof(otp));
+		if (ret > 0 && otp) {
+			snprintf(buf, sizeof(buf), "0x%04x", otp >> 16);
+			env_set("board_id", buf);
+
+			snprintf(buf, sizeof(buf), "0x%04x",
+				 ((otp >> 8) & 0xF) - 1 + 0xA);
+			env_set("board_rev", buf);
+		}
+	}
+	
 	return 0;
 }
 
-- 
2.34.1

